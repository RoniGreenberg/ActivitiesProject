@page "/login"

@using activitiesLibrary
@using ActivitiesApi.Services

@rendermode InteractiveServer
@inject UserService UserService
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<h3>Login</h3>

<div style="max-width: 300px; margin: 0 auto;">
    <div style="margin-bottom: 15px;">
        <label for="email">Email:</label>
        <input id="email" @bind="Email" type="email" style="width: 100%; padding: 5px; box-sizing: border-box;" />
    </div>
    <div style="margin-bottom: 15px;">
        <label for="password">Password:</label>
        <input id="password" @bind="Password" type="password" style="width: 100%; padding: 5px; box-sizing: border-box;" />
    </div>
    <div style="margin-bottom: 15px;">
        <input id="keepMeLoggedIn" type="checkbox" />
        <label for="keepMeLoggedIn">Keep me logged in</label>
    </div>
    <button class="btn btn-primary course-button" @onclick="LoginUser" style="background-color: #f8b1d2; color: white; width: 100%; padding: 10px;">Login</button>
    <button class="btn btn-secondary" @onclick="OpenPolicyImage" style="background-color: #f8b1d2; color: white; margin-top: 10px; width: 100%; padding: 10px;">View Policy</button>
    <div style="text-align: center; margin-top: 15px;">
        <a href="/forgot-password" style="color: #007bff; text-decoration: none;">Forget Password?</a>
    </div>
    <div style="text-align: center; margin-top: 15px;">
        <a href="/signup" class="sign-up-button" style="color: #007bff; text-decoration: none;">Sign Up</a>
    </div>
</div>

<p>@Message</p>

@code {
    private string Email { get; set; } = string.Empty;
    private string Password { get; set; } = string.Empty;
    private string Message { get; set; } = string.Empty;

    // פונקציה להתחברות
    private async Task LoginUser()
    {
        var loginRequest = new { Email, Password };

        try
        {
            var response = await HttpClient.PostAsJsonAsync("https://localhost:7250/api/User/Login", loginRequest);

            if (response.IsSuccessStatusCode)
            {
                var user = await response.Content.ReadFromJsonAsync<User>();

                if (user != null)
                {
                    // שמירת פרטי המשתמש בשירות
                    UserService.LoginUser(user);

                    Message = $"Welcome, {user.first_name}!";

                    // ניווט לדף אחר
                    NavigationManager.NavigateTo("/Weather");
                }
                else
                {
                    Message = "User data could not be retrieved.";
                }
            }
            else
            {
                Message = "Login failed. Please check your email and password.";
            }
        }
        catch (Exception ex)
        {
            Message = $"Error: {ex.Message}";
        }
    }

    // פונקציה לפתיחת התמונה
    private void OpenPolicyImage()
    {
        string filePath = @"C:\Users\User\Desktop\מדיניות.jpg";

        try
        {
            var psi = new System.Diagnostics.ProcessStartInfo
                {
                    FileName = filePath,
                    UseShellExecute = true
                };
            System.Diagnostics.Process.Start(psi);
        }
        catch (Exception ex)
        {
            Message = $"Error opening policy image: {ex.Message}";
        }
    }
}
